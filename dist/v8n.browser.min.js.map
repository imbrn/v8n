{"version":3,"file":"v8n.browser.min.js","sources":["../src/Rule.js","../src/Modifier.js","../src/ValidationError.js","../src/Context.js","../src/v8n.js"],"sourcesContent":["class Rule {\n  constructor(name, fn, args, modifiers) {\n    this.name = name;\n    this.fn = fn;\n    this.args = args;\n    this.modifiers = modifiers;\n  }\n\n  _test(value) {\n    let fn = this.fn;\n\n    try {\n      testAux(this.modifiers.slice(), fn, this)(value);\n    } catch (ex) {\n      fn = () => false;\n    }\n\n    try {\n      return testAux(this.modifiers.slice(), fn, this)(value);\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  _check(value) {\n    try {\n      testAux(this.modifiers.slice(), this.fn, this)(value);\n    } catch (ex) {\n      if (testAux(this.modifiers.slice(), it => it, this)(false)) {\n        return;\n      }\n    }\n\n    if (!testAux(this.modifiers.slice(), this.fn, this)(value)) {\n      throw null;\n    }\n  }\n\n  _testAsync(value) {\n    return new Promise((resolve, reject) => {\n      testAsyncAux(\n        this.modifiers.slice(),\n        this.fn,\n        this,\n      )(value)\n        .then(valid => {\n          if (valid) {\n            resolve(value);\n          } else {\n            reject(null);\n          }\n        })\n        .catch(ex => reject(ex));\n    });\n  }\n}\n\nfunction pickFn(fn, variant = 'simple') {\n  return typeof fn === 'object' ? fn[variant] : fn;\n}\n\nfunction testAux(modifiers, fn, rule) {\n  if (modifiers.length) {\n    const modifier = modifiers.shift();\n    const nextFn = testAux(modifiers, fn);\n    return modifier.perform(nextFn, rule);\n  } else {\n    return pickFn(fn);\n  }\n}\n\nfunction testAsyncAux(modifiers, fn, rule) {\n  if (modifiers.length) {\n    const modifier = modifiers.shift();\n    const nextFn = testAsyncAux(modifiers, fn);\n    return modifier.performAsync(nextFn, rule);\n  } else {\n    return value => Promise.resolve(pickFn(fn, 'async')(value));\n  }\n}\n\nexport default Rule;\n","class Modifier {\n  constructor(name, perform, performAsync) {\n    this.name = name;\n    this.perform = perform;\n    this.performAsync = performAsync;\n  }\n}\n\nexport default Modifier;\n","class ValidationError extends Error {\n  constructor(rule, value, cause, target, ...remaining) {\n    super(remaining);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n    this.rule = rule;\n    this.value = value;\n    this.cause = cause;\n    this.target = target;\n  }\n}\n\nexport default ValidationError;\n","import Rule from './Rule';\nimport Modifier from './Modifier';\nimport ValidationError from './ValidationError';\n\nclass Context {\n  constructor(chain = [], nextRuleModifiers = []) {\n    this.chain = chain;\n    this.nextRuleModifiers = nextRuleModifiers;\n  }\n\n  _applyRule(ruleFn, name) {\n    return (...args) => {\n      this.chain.push(\n        new Rule(name, ruleFn.apply(this, args), args, this.nextRuleModifiers),\n      );\n      this.nextRuleModifiers = [];\n      return this;\n    };\n  }\n\n  _applyModifier(modifier, name) {\n    this.nextRuleModifiers.push(\n      new Modifier(name, modifier.simple, modifier.async),\n    );\n    return this;\n  }\n\n  _clone() {\n    return new Context(this.chain.slice(), this.nextRuleModifiers.slice());\n  }\n\n  test(value) {\n    return this.chain.every(rule => rule._test(value));\n  }\n\n  testAll(value) {\n    const err = [];\n    this.chain.forEach(rule => {\n      try {\n        rule._check(value);\n      } catch (ex) {\n        err.push(new ValidationError(rule, value, ex));\n      }\n    });\n    return err;\n  }\n\n  check(value) {\n    this.chain.forEach(rule => {\n      try {\n        rule._check(value);\n      } catch (ex) {\n        throw new ValidationError(rule, value, ex);\n      }\n    });\n  }\n\n  testAsync(value) {\n    return new Promise((resolve, reject) => {\n      executeAsyncRules(value, this.chain.slice(), resolve, reject);\n    });\n  }\n}\n\nfunction executeAsyncRules(value, rules, resolve, reject) {\n  if (rules.length) {\n    const rule = rules.shift();\n    rule._testAsync(value).then(\n      () => {\n        executeAsyncRules(value, rules, resolve, reject);\n      },\n      cause => {\n        reject(new ValidationError(rule, value, cause));\n      },\n    );\n  } else {\n    resolve(value);\n  }\n}\n\nexport default Context;\n","import Context from './Context';\n\nfunction v8n() {\n  return typeof Proxy !== undefined\n    ? proxyContext(new Context())\n    : proxylessContext(new Context());\n}\n\n// Custom rules\nlet customRules = {};\n\nv8n.extend = function(newRules) {\n  Object.assign(customRules, newRules);\n};\n\nv8n.clearCustomRules = function() {\n  customRules = {};\n};\n\nfunction proxyContext(context) {\n  return new Proxy(context, {\n    get(obj, prop) {\n      if (prop in obj) {\n        return obj[prop];\n      }\n\n      const newContext = proxyContext(context._clone());\n\n      if (prop in availableModifiers) {\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      }\n      if (prop in customRules) {\n        return newContext._applyRule(customRules[prop], prop);\n      }\n      if (prop in availableRules) {\n        return newContext._applyRule(availableRules[prop], prop);\n      }\n    },\n  });\n}\n\nfunction proxylessContext(context) {\n  const addRuleSet = (ruleSet, targetContext) => {\n    Object.keys(ruleSet).forEach(prop => {\n      targetContext[prop] = (...args) => {\n        const newContext = proxylessContext(targetContext._clone());\n        const contextWithRuleApplied = newContext._applyRule(\n          ruleSet[prop],\n          prop,\n        )(...args);\n        return contextWithRuleApplied;\n      };\n    });\n    return targetContext;\n  };\n\n  const contextWithAvailableRules = addRuleSet(availableRules, context);\n  const contextWithAllRules = addRuleSet(\n    customRules,\n    contextWithAvailableRules,\n  );\n\n  Object.keys(availableModifiers).forEach(prop => {\n    Object.defineProperty(contextWithAllRules, prop, {\n      get: () => {\n        const newContext = proxylessContext(contextWithAllRules._clone());\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      },\n    });\n  });\n\n  return contextWithAllRules;\n}\n\nconst availableModifiers = {\n  not: {\n    simple: fn => value => !fn(value),\n    async: fn => value =>\n      Promise.resolve(fn(value))\n        .then(result => !result)\n        .catch(() => true),\n  },\n\n  some: {\n    simple: fn => value => {\n      return split(value).some(item => {\n        try {\n          return fn(item);\n        } catch (ex) {\n          return false;\n        }\n      });\n    },\n    async: fn => value => {\n      return Promise.all(\n        split(value).map(item => {\n          try {\n            return fn(item).catch(() => false);\n          } catch (ex) {\n            return false;\n          }\n        }),\n      ).then(result => result.some(Boolean));\n    },\n  },\n\n  every: {\n    simple: fn => value => value !== false && split(value).every(fn),\n    async: fn => value =>\n      Promise.all(split(value).map(fn)).then(result => result.every(Boolean)),\n  },\n\n  strict: {\n    simple: (fn, rule) => value => {\n      if (isSchemaRule(rule) && value && typeof value === 'object') {\n        return (\n          Object.keys(rule.args[0]).length === Object.keys(value).length &&\n          fn(value)\n        );\n      }\n      return fn(value);\n    },\n    async: (fn, rule) => value =>\n      Promise.resolve(fn(value))\n        .then(result => {\n          if (isSchemaRule(rule) && value && typeof value === 'object') {\n            return (\n              Object.keys(rule.args[0]).length === Object.keys(value).length &&\n              result\n            );\n          }\n          return result;\n        })\n        .catch(() => false),\n  },\n};\n\nfunction isSchemaRule(rule) {\n  return (\n    rule &&\n    rule.name === 'schema' &&\n    rule.args.length > 0 &&\n    typeof rule.args[0] === 'object'\n  );\n}\n\nfunction split(value) {\n  if (typeof value === 'string') {\n    return value.split('');\n  }\n  return value;\n}\n\nconst availableRules = {\n  // Value\n\n  equal: expected => value => value == expected,\n\n  exact: expected => value => value === expected,\n\n  // Types\n\n  number: (allowInfinite = true) => value =>\n    typeof value === 'number' && (allowInfinite || isFinite(value)),\n\n  integer: () => value => {\n    const isInteger = Number.isInteger || isIntegerPolyfill;\n    return isInteger(value);\n  },\n\n  numeric: () => value => !isNaN(parseFloat(value)) && isFinite(value),\n\n  string: () => testType('string'),\n\n  boolean: () => testType('boolean'),\n\n  undefined: () => testType('undefined'),\n\n  null: () => testType('null'),\n\n  array: () => testType('array'),\n\n  object: () => testType('object'),\n\n  instanceOf: instance => value => value instanceof instance,\n\n  // Pattern\n\n  pattern: expected => value => expected.test(value),\n\n  lowercase: () => value => /^([a-z]+\\s*)+$/.test(value),\n\n  uppercase: () => value => /^([A-Z]+\\s*)+$/.test(value),\n\n  vowel: () => value => /^[aeiou]+$/i.test(value),\n\n  consonant: () => value => /^(?=[^aeiou])([a-z]+)$/i.test(value),\n\n  // Value at\n\n  first: expected => value => value[0] == expected,\n\n  last: expected => value => value[value.length - 1] == expected,\n\n  // Length\n\n  empty: () => value => value.length === 0,\n\n  length: (min, max) => value =>\n    value.length >= min && value.length <= (max || min),\n\n  minLength: min => value => value.length >= min,\n\n  maxLength: max => value => value.length <= max,\n\n  // Range\n\n  negative: () => value => value < 0,\n\n  positive: () => value => value >= 0,\n\n  between: (a, b) => value => value >= a && value <= b,\n\n  range: (a, b) => value => value >= a && value <= b,\n\n  lessThan: n => value => value < n,\n\n  lessThanOrEqual: n => value => value <= n,\n\n  greaterThan: n => value => value > n,\n\n  greaterThanOrEqual: n => value => value >= n,\n\n  // Divisible\n\n  even: () => value => value % 2 === 0,\n\n  odd: () => value => value % 2 !== 0,\n\n  includes: expected => value => ~value.indexOf(expected),\n\n  schema: schema => testSchema(schema),\n\n  // branching\n\n  passesAnyOf: (...validations) => value =>\n    validations.some(validation => validation.test(value)),\n\n  optional: createOptionalRule(false),\n  optionalAsync: createOptionalRule(true),\n};\n\nfunction createOptionalRule(asynchronous) {\n  return (validation, considerTrimmedEmptyString = false) => value => {\n    if (\n      considerTrimmedEmptyString &&\n      typeof value === 'string' &&\n      value.trim() === ''\n    ) {\n      return true;\n    }\n\n    if (value !== undefined && value !== null) {\n      if (!asynchronous) {\n        validation.check(value);\n      } else {\n        return validation.testAsync(value);\n      }\n    }\n    return true;\n  };\n}\n\nfunction testType(expected) {\n  return value => {\n    return (\n      (Array.isArray(value) && expected === 'array') ||\n      (value === null && expected === 'null') ||\n      typeof value === expected\n    );\n  };\n}\n\nfunction isIntegerPolyfill(value) {\n  return (\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n  );\n}\n\nfunction testSchema(schema) {\n  return {\n    simple: value => {\n      const causes = [];\n      Object.keys(schema).forEach(key => {\n        const nestedValidation = schema[key];\n        try {\n          nestedValidation.check((value || {})[key]);\n        } catch (ex) {\n          ex.target = key;\n          causes.push(ex);\n        }\n      });\n      if (causes.length > 0) {\n        throw causes;\n      }\n      return true;\n    },\n    async: value => {\n      const causes = [];\n      const nested = Object.keys(schema).map(key => {\n        const nestedValidation = schema[key];\n        return nestedValidation.testAsync((value || {})[key]).catch(ex => {\n          ex.target = key;\n          causes.push(ex);\n        });\n      });\n      return Promise.all(nested).then(() => {\n        if (causes.length > 0) {\n          throw causes;\n        }\n\n        return true;\n      });\n    },\n  };\n}\n\nexport default v8n;\n"],"names":["Rule","name","fn","args","modifiers","this","pickFn","variant","testAux","rule","length","const","modifier","shift","nextFn","perform","testAsyncAux","performAsync","value","Promise","resolve","_test","let","slice","ex","_check","it","_testAsync","reject","then","valid","catch","Modifier","ValidationError","cause","target","super","remaining","Error","captureStackTrace","Context","chain","nextRuleModifiers","executeAsyncRules","rules","v8n","undefined","Proxy","proxyContext","proxylessContext","_applyRule","ruleFn","push","apply","_applyModifier","simple","async","_clone","test","every","testAll","err","forEach","check","testAsync","customRules","context","get","obj","prop","newContext","availableModifiers","availableRules","addRuleSet","ruleSet","targetContext","Object","keys","contextWithRuleApplied","contextWithAvailableRules","contextWithAllRules","defineProperty","extend","newRules","assign","clearCustomRules","not","result","some","split","item","all","map","Boolean","strict","isSchemaRule","equal","expected","exact","number","allowInfinite","isFinite","integer","Number","isInteger","isIntegerPolyfill","numeric","isNaN","parseFloat","string","testType","boolean","null","array","object","instanceOf","instance","pattern","lowercase","uppercase","vowel","consonant","first","last","empty","min","max","minLength","maxLength","negative","positive","between","a","b","range","lessThan","n","lessThanOrEqual","greaterThan","greaterThanOrEqual","even","odd","includes","indexOf","schema","causes","key","nestedValidation","nested","testSchema","passesAnyOf","validations","validation","optional","createOptionalRule","optionalAsync","asynchronous","considerTrimmedEmptyString","trim","Array","isArray","Math","floor"],"mappings":"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"}