{"version":3,"file":"v8n.browser.min.js","sources":["../src/Rule.js","../src/Modifier.js","../src/ValidationError.js","../src/Context.js","../src/rules/optional.js","../src/v8n.js"],"sourcesContent":["class Rule {\n  constructor(name, fn, args, modifiers) {\n    this.name = name;\n    this.fn = fn;\n    this.args = args;\n    this.modifiers = modifiers;\n  }\n\n  _test(value) {\n    let fn = this.fn;\n\n    try {\n      testAux(this.modifiers.slice(), fn, this)(value);\n    } catch (ex) {\n      fn = () => false;\n    }\n\n    try {\n      return testAux(this.modifiers.slice(), fn, this)(value);\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  _check(value) {\n    try {\n      testAux(this.modifiers.slice(), this.fn, this)(value);\n    } catch (ex) {\n      if (testAux(this.modifiers.slice(), it => it, this)(false)) {\n        return;\n      }\n    }\n\n    if (!testAux(this.modifiers.slice(), this.fn, this)(value)) {\n      throw null;\n    }\n  }\n\n  _testAsync(value) {\n    return new Promise((resolve, reject) => {\n      testAsyncAux(\n        this.modifiers.slice(),\n        this.fn,\n        this,\n      )(value)\n        .then(valid => {\n          if (valid) {\n            resolve(value);\n          } else {\n            reject(null);\n          }\n        })\n        .catch(ex => reject(ex));\n    });\n  }\n}\n\nfunction pickFn(fn, variant = 'simple') {\n  return typeof fn === 'object' ? fn[variant] : fn;\n}\n\nfunction testAux(modifiers, fn, rule) {\n  if (modifiers.length) {\n    const modifier = modifiers.shift();\n    const nextFn = testAux(modifiers, fn, rule);\n    return modifier.perform(nextFn, rule);\n  } else {\n    return pickFn(fn);\n  }\n}\n\nfunction testAsyncAux(modifiers, fn, rule) {\n  if (modifiers.length) {\n    const modifier = modifiers.shift();\n    const nextFn = testAsyncAux(modifiers, fn, rule);\n    return modifier.performAsync(nextFn, rule);\n  } else {\n    return value => Promise.resolve(pickFn(fn, 'async')(value));\n  }\n}\n\nexport default Rule;\n","class Modifier {\n  constructor(name, perform, performAsync) {\n    this.name = name;\n    this.perform = perform;\n    this.performAsync = performAsync;\n  }\n}\n\nexport default Modifier;\n","class ValidationError extends Error {\n  constructor(rule, value, cause, target, ...remaining) {\n    super(remaining);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n    this.rule = rule;\n    this.value = value;\n    this.cause = cause;\n    this.target = target;\n  }\n}\n\nexport default ValidationError;\n","import Rule from './Rule';\nimport Modifier from './Modifier';\nimport ValidationError from './ValidationError';\n\nclass Context {\n  constructor(chain = [], nextRuleModifiers = []) {\n    this.chain = chain;\n    this.nextRuleModifiers = nextRuleModifiers;\n  }\n\n  _applyRule(ruleFn, name) {\n    return (...args) => {\n      this.chain.push(\n        new Rule(name, ruleFn.apply(this, args), args, this.nextRuleModifiers),\n      );\n      this.nextRuleModifiers = [];\n      return this;\n    };\n  }\n\n  _applyModifier(modifier, name) {\n    this.nextRuleModifiers.push(\n      new Modifier(name, modifier.simple, modifier.async),\n    );\n    return this;\n  }\n\n  _clone() {\n    return new Context(this.chain.slice(), this.nextRuleModifiers.slice());\n  }\n\n  test(value) {\n    return this.chain.every(rule => rule._test(value));\n  }\n\n  testAll(value) {\n    const err = [];\n    this.chain.forEach(rule => {\n      try {\n        rule._check(value);\n      } catch (ex) {\n        err.push(new ValidationError(rule, value, ex));\n      }\n    });\n    return err;\n  }\n\n  check(value) {\n    this.chain.forEach(rule => {\n      try {\n        rule._check(value);\n      } catch (ex) {\n        throw new ValidationError(rule, value, ex);\n      }\n    });\n  }\n\n  testAsync(value) {\n    return new Promise((resolve, reject) => {\n      executeAsyncRules(value, this.chain.slice(), resolve, reject);\n    });\n  }\n}\n\nfunction executeAsyncRules(value, rules, resolve, reject) {\n  if (rules.length) {\n    const rule = rules.shift();\n    rule._testAsync(value).then(\n      () => {\n        executeAsyncRules(value, rules, resolve, reject);\n      },\n      cause => {\n        reject(new ValidationError(rule, value, cause));\n      },\n    );\n  } else {\n    resolve(value);\n  }\n}\n\nexport default Context;\n","const consideredEmpty = (value, considerTrimmedEmptyString) => {\n  if (\n    considerTrimmedEmptyString &&\n    typeof value === 'string' &&\n    value.trim().length === 0\n  ) {\n    return true;\n  }\n\n  return value === undefined || value === null;\n};\n\nexport default (validation, considerTrimmedEmptyString = false) => ({\n  simple: value =>\n    consideredEmpty(value, considerTrimmedEmptyString) ||\n    validation.check(value) === undefined,\n  async: value =>\n    consideredEmpty(value, considerTrimmedEmptyString) ||\n    validation.testAsync(value),\n});\n","import Context from './Context';\nimport optional from './rules/optional';\n\nfunction v8n() {\n  return typeof Proxy !== undefined\n    ? proxyContext(new Context())\n    : proxylessContext(new Context());\n}\n\n// Custom rules\nlet customRules = {};\n\nv8n.extend = function(newRules) {\n  Object.assign(customRules, newRules);\n};\n\nv8n.clearCustomRules = function() {\n  customRules = {};\n};\n\nfunction proxyContext(context) {\n  return new Proxy(context, {\n    get(obj, prop) {\n      if (prop in obj) {\n        return obj[prop];\n      }\n\n      const newContext = proxyContext(context._clone());\n\n      if (prop in availableModifiers) {\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      }\n      if (prop in customRules) {\n        return newContext._applyRule(customRules[prop], prop);\n      }\n      if (prop in availableRules) {\n        return newContext._applyRule(availableRules[prop], prop);\n      }\n    },\n  });\n}\n\nfunction proxylessContext(context) {\n  const addRuleSet = (ruleSet, targetContext) => {\n    Object.keys(ruleSet).forEach(prop => {\n      targetContext[prop] = (...args) => {\n        const newContext = proxylessContext(targetContext._clone());\n        const contextWithRuleApplied = newContext._applyRule(\n          ruleSet[prop],\n          prop,\n        )(...args);\n        return contextWithRuleApplied;\n      };\n    });\n    return targetContext;\n  };\n\n  const contextWithAvailableRules = addRuleSet(availableRules, context);\n  const contextWithAllRules = addRuleSet(\n    customRules,\n    contextWithAvailableRules,\n  );\n\n  Object.keys(availableModifiers).forEach(prop => {\n    Object.defineProperty(contextWithAllRules, prop, {\n      get: () => {\n        const newContext = proxylessContext(contextWithAllRules._clone());\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      },\n    });\n  });\n\n  return contextWithAllRules;\n}\n\nconst availableModifiers = {\n  not: {\n    simple: fn => value => !fn(value),\n    async: fn => value =>\n      Promise.resolve(fn(value))\n        .then(result => !result)\n        .catch(() => true),\n  },\n\n  some: {\n    simple: fn => value => {\n      return split(value).some(item => {\n        try {\n          return fn(item);\n        } catch (ex) {\n          return false;\n        }\n      });\n    },\n    async: fn => value => {\n      return Promise.all(\n        split(value).map(item => {\n          try {\n            return fn(item).catch(() => false);\n          } catch (ex) {\n            return false;\n          }\n        }),\n      ).then(result => result.some(Boolean));\n    },\n  },\n\n  every: {\n    simple: fn => value => value !== false && split(value).every(fn),\n    async: fn => value =>\n      Promise.all(split(value).map(fn)).then(result => result.every(Boolean)),\n  },\n\n  strict: {\n    simple: (fn, rule) => value => {\n      if (isSchemaRule(rule) && value && typeof value === 'object') {\n        return (\n          Object.keys(rule.args[0]).length === Object.keys(value).length &&\n          fn(value)\n        );\n      }\n      return fn(value);\n    },\n    async: (fn, rule) => value =>\n      Promise.resolve(fn(value))\n        .then(result => {\n          if (isSchemaRule(rule) && value && typeof value === 'object') {\n            return (\n              Object.keys(rule.args[0]).length === Object.keys(value).length &&\n              result\n            );\n          }\n          return result;\n        })\n        .catch(() => false),\n  },\n};\n\nfunction isSchemaRule(rule) {\n  return (\n    rule &&\n    rule.name === 'schema' &&\n    rule.args.length > 0 &&\n    typeof rule.args[0] === 'object'\n  );\n}\n\nfunction split(value) {\n  if (typeof value === 'string') {\n    return value.split('');\n  }\n  return value;\n}\n\nconst availableRules = {\n  // Value\n\n  equal: expected => value => value == expected,\n\n  exact: expected => value => value === expected,\n\n  // Types\n\n  number: (allowInfinite = true) => value =>\n    typeof value === 'number' && (allowInfinite || isFinite(value)),\n\n  integer: () => value => {\n    const isInteger = Number.isInteger || isIntegerPolyfill;\n    return isInteger(value);\n  },\n\n  numeric: () => value => !isNaN(parseFloat(value)) && isFinite(value),\n\n  string: () => testType('string'),\n\n  boolean: () => testType('boolean'),\n\n  undefined: () => testType('undefined'),\n\n  null: () => testType('null'),\n\n  array: () => testType('array'),\n\n  object: () => testType('object'),\n\n  instanceOf: instance => value => value instanceof instance,\n\n  // Pattern\n\n  pattern: expected => value => expected.test(value),\n\n  lowercase: () => value => /^([a-z]+\\s*)+$/.test(value),\n\n  uppercase: () => value => /^([A-Z]+\\s*)+$/.test(value),\n\n  vowel: () => value => /^[aeiou]+$/i.test(value),\n\n  consonant: () => value => /^(?=[^aeiou])([a-z]+)$/i.test(value),\n\n  // Value at\n\n  first: expected => value => value[0] == expected,\n\n  last: expected => value => value[value.length - 1] == expected,\n\n  // Length\n\n  empty: () => value => value.length === 0,\n\n  length: (min, max) => value =>\n    value.length >= min && value.length <= (max || min),\n\n  minLength: min => value => value.length >= min,\n\n  maxLength: max => value => value.length <= max,\n\n  // Range\n\n  negative: () => value => value < 0,\n\n  positive: () => value => value >= 0,\n\n  between: (a, b) => value => value >= a && value <= b,\n\n  range: (a, b) => value => value >= a && value <= b,\n\n  lessThan: n => value => value < n,\n\n  lessThanOrEqual: n => value => value <= n,\n\n  greaterThan: n => value => value > n,\n\n  greaterThanOrEqual: n => value => value >= n,\n\n  // Divisible\n\n  even: () => value => value % 2 === 0,\n\n  odd: () => value => value % 2 !== 0,\n\n  includes: expected => value => ~value.indexOf(expected),\n\n  schema: schema => testSchema(schema),\n\n  // branching\n\n  passesAnyOf: (...validations) => value =>\n    validations.some(validation => validation.test(value)),\n\n  optional,\n};\n\nfunction testType(expected) {\n  return value => {\n    return (\n      (Array.isArray(value) && expected === 'array') ||\n      (value === null && expected === 'null') ||\n      typeof value === expected\n    );\n  };\n}\n\nfunction isIntegerPolyfill(value) {\n  return (\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n  );\n}\n\nfunction testSchema(schema) {\n  return {\n    simple: value => {\n      const causes = [];\n      Object.keys(schema).forEach(key => {\n        const nestedValidation = schema[key];\n        try {\n          nestedValidation.check((value || {})[key]);\n        } catch (ex) {\n          ex.target = key;\n          causes.push(ex);\n        }\n      });\n      if (causes.length > 0) {\n        throw causes;\n      }\n      return true;\n    },\n    async: value => {\n      const causes = [];\n      const nested = Object.keys(schema).map(key => {\n        const nestedValidation = schema[key];\n        return nestedValidation.testAsync((value || {})[key]).catch(ex => {\n          ex.target = key;\n          causes.push(ex);\n        });\n      });\n      return Promise.all(nested).then(() => {\n        if (causes.length > 0) {\n          throw causes;\n        }\n\n        return true;\n      });\n    },\n  };\n}\n\nexport default v8n;\n"],"names":["Rule","name","fn","args","modifiers","this","pickFn","variant","testAux","rule","length","const","modifier","shift","nextFn","perform","testAsyncAux","performAsync","value","Promise","resolve","_test","let","slice","ex","_check","it","_testAsync","reject","then","valid","catch","Modifier","ValidationError","cause","target","super","remaining","Error","captureStackTrace","Context","chain","nextRuleModifiers","executeAsyncRules","rules","_applyRule","ruleFn","push","apply","_applyModifier","simple","async","_clone","test","every","testAll","err","forEach","check","testAsync","consideredEmpty","considerTrimmedEmptyString","trim","v8n","undefined","Proxy","proxyContext","proxylessContext","customRules","context","get","obj","prop","newContext","availableModifiers","availableRules","addRuleSet","ruleSet","targetContext","Object","keys","contextWithRuleApplied","contextWithAvailableRules","contextWithAllRules","defineProperty","extend","newRules","assign","clearCustomRules","not","result","some","split","item","all","map","Boolean","strict","isSchemaRule","equal","expected","exact","number","allowInfinite","isFinite","integer","Number","isInteger","isIntegerPolyfill","numeric","isNaN","parseFloat","string","testType","boolean","null","array","object","instanceOf","instance","pattern","lowercase","uppercase","vowel","consonant","first","last","empty","min","max","minLength","maxLength","negative","positive","between","a","b","range","lessThan","n","lessThanOrEqual","greaterThan","greaterThanOrEqual","even","odd","includes","indexOf","schema","causes","key","nestedValidation","nested","testSchema","passesAnyOf","validations","validation","Array","isArray","Math","floor"],"mappings":"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"}