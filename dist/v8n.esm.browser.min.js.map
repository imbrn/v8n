{"version":3,"file":"v8n.esm.browser.min.js","sources":["../src/Rule.js","../src/Modifier.js","../src/ValidationError.js","../src/Context.js","../src/rules/optional.js","../src/v8n.js"],"sourcesContent":["class Rule {\n  constructor(name, fn, args, modifiers) {\n    this.name = name;\n    this.fn = fn;\n    this.args = args;\n    this.modifiers = modifiers;\n  }\n\n  _test(value) {\n    let fn = this.fn;\n\n    try {\n      testAux(this.modifiers.slice(), fn, this)(value);\n    } catch (ex) {\n      fn = () => false;\n    }\n\n    try {\n      return testAux(this.modifiers.slice(), fn, this)(value);\n    } catch (ex) {\n      return false;\n    }\n  }\n\n  _check(value) {\n    try {\n      testAux(this.modifiers.slice(), this.fn, this)(value);\n    } catch (ex) {\n      if (testAux(this.modifiers.slice(), it => it, this)(false)) {\n        return;\n      }\n    }\n\n    if (!testAux(this.modifiers.slice(), this.fn, this)(value)) {\n      throw null;\n    }\n  }\n\n  _testAsync(value) {\n    return new Promise((resolve, reject) => {\n      testAsyncAux(\n        this.modifiers.slice(),\n        this.fn,\n        this,\n      )(value)\n        .then(valid => {\n          if (valid) {\n            resolve(value);\n          } else {\n            reject(null);\n          }\n        })\n        .catch(ex => reject(ex));\n    });\n  }\n}\n\nfunction pickFn(fn, variant = 'simple') {\n  return typeof fn === 'object' ? fn[variant] : fn;\n}\n\nfunction testAux(modifiers, fn, rule) {\n  if (modifiers.length) {\n    const modifier = modifiers.shift();\n    const nextFn = testAux(modifiers, fn, rule);\n    return modifier.perform(nextFn, rule);\n  } else {\n    return pickFn(fn);\n  }\n}\n\nfunction testAsyncAux(modifiers, fn, rule) {\n  if (modifiers.length) {\n    const modifier = modifiers.shift();\n    const nextFn = testAsyncAux(modifiers, fn, rule);\n    return modifier.performAsync(nextFn, rule);\n  } else {\n    return value => Promise.resolve(pickFn(fn, 'async')(value));\n  }\n}\n\nexport default Rule;\n","class Modifier {\n  constructor(name, perform, performAsync) {\n    this.name = name;\n    this.perform = perform;\n    this.performAsync = performAsync;\n  }\n}\n\nexport default Modifier;\n","class ValidationError extends Error {\n  constructor(rule, value, cause, target, ...remaining) {\n    super(remaining);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ValidationError);\n    }\n    this.rule = rule;\n    this.value = value;\n    this.cause = cause;\n    this.target = target;\n  }\n}\n\nexport default ValidationError;\n","import Rule from './Rule';\nimport Modifier from './Modifier';\nimport ValidationError from './ValidationError';\n\nclass Context {\n  constructor(chain = [], nextRuleModifiers = []) {\n    this.chain = chain;\n    this.nextRuleModifiers = nextRuleModifiers;\n  }\n\n  _applyRule(ruleFn, name) {\n    return (...args) => {\n      this.chain.push(\n        new Rule(name, ruleFn.apply(this, args), args, this.nextRuleModifiers),\n      );\n      this.nextRuleModifiers = [];\n      return this;\n    };\n  }\n\n  _applyModifier(modifier, name) {\n    this.nextRuleModifiers.push(\n      new Modifier(name, modifier.simple, modifier.async),\n    );\n    return this;\n  }\n\n  _clone() {\n    return new Context(this.chain.slice(), this.nextRuleModifiers.slice());\n  }\n\n  test(value) {\n    return this.chain.every(rule => rule._test(value));\n  }\n\n  testAll(value) {\n    const err = [];\n    this.chain.forEach(rule => {\n      try {\n        rule._check(value);\n      } catch (ex) {\n        err.push(new ValidationError(rule, value, ex));\n      }\n    });\n    return err;\n  }\n\n  check(value) {\n    this.chain.forEach(rule => {\n      try {\n        rule._check(value);\n      } catch (ex) {\n        throw new ValidationError(rule, value, ex);\n      }\n    });\n  }\n\n  testAsync(value) {\n    return new Promise((resolve, reject) => {\n      executeAsyncRules(value, this.chain.slice(), resolve, reject);\n    });\n  }\n}\n\nfunction executeAsyncRules(value, rules, resolve, reject) {\n  if (rules.length) {\n    const rule = rules.shift();\n    rule._testAsync(value).then(\n      () => {\n        executeAsyncRules(value, rules, resolve, reject);\n      },\n      cause => {\n        reject(new ValidationError(rule, value, cause));\n      },\n    );\n  } else {\n    resolve(value);\n  }\n}\n\nexport default Context;\n","const consideredEmpty = (value, considerTrimmedEmptyString) => {\n  if (\n    considerTrimmedEmptyString &&\n    typeof value === 'string' &&\n    value.trim().length === 0\n  ) {\n    return true;\n  }\n\n  return value === undefined || value === null;\n};\n\nexport default (validation, considerTrimmedEmptyString = false) => ({\n  simple: value =>\n    consideredEmpty(value, considerTrimmedEmptyString) ||\n    validation.check(value) === undefined,\n  async: value =>\n    consideredEmpty(value, considerTrimmedEmptyString) ||\n    validation.testAsync(value),\n});\n","import Context from './Context';\nimport optional from './rules/optional';\n\nfunction v8n() {\n  return typeof Proxy !== undefined\n    ? proxyContext(new Context())\n    : proxylessContext(new Context());\n}\n\n// Custom rules\nlet customRules = {};\n\nv8n.extend = function(newRules) {\n  Object.assign(customRules, newRules);\n};\n\nv8n.clearCustomRules = function() {\n  customRules = {};\n};\n\nfunction proxyContext(context) {\n  return new Proxy(context, {\n    get(obj, prop) {\n      if (prop in obj) {\n        return obj[prop];\n      }\n\n      const newContext = proxyContext(context._clone());\n\n      if (prop in availableModifiers) {\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      }\n      if (prop in customRules) {\n        return newContext._applyRule(customRules[prop], prop);\n      }\n      if (prop in availableRules) {\n        return newContext._applyRule(availableRules[prop], prop);\n      }\n    },\n  });\n}\n\nfunction proxylessContext(context) {\n  const addRuleSet = (ruleSet, targetContext) => {\n    Object.keys(ruleSet).forEach(prop => {\n      targetContext[prop] = (...args) => {\n        const newContext = proxylessContext(targetContext._clone());\n        const contextWithRuleApplied = newContext._applyRule(\n          ruleSet[prop],\n          prop,\n        )(...args);\n        return contextWithRuleApplied;\n      };\n    });\n    return targetContext;\n  };\n\n  const contextWithAvailableRules = addRuleSet(availableRules, context);\n  const contextWithAllRules = addRuleSet(\n    customRules,\n    contextWithAvailableRules,\n  );\n\n  Object.keys(availableModifiers).forEach(prop => {\n    Object.defineProperty(contextWithAllRules, prop, {\n      get: () => {\n        const newContext = proxylessContext(contextWithAllRules._clone());\n        return newContext._applyModifier(availableModifiers[prop], prop);\n      },\n    });\n  });\n\n  return contextWithAllRules;\n}\n\nconst availableModifiers = {\n  not: {\n    simple: fn => value => !fn(value),\n    async: fn => value =>\n      Promise.resolve(fn(value))\n        .then(result => !result)\n        .catch(() => true),\n  },\n\n  some: {\n    simple: fn => value => {\n      return split(value).some(item => {\n        try {\n          return fn(item);\n        } catch (ex) {\n          return false;\n        }\n      });\n    },\n    async: fn => value => {\n      return Promise.all(\n        split(value).map(item => {\n          try {\n            return fn(item).catch(() => false);\n          } catch (ex) {\n            return false;\n          }\n        }),\n      ).then(result => result.some(Boolean));\n    },\n  },\n\n  every: {\n    simple: fn => value => value !== false && split(value).every(fn),\n    async: fn => value =>\n      Promise.all(split(value).map(fn)).then(result => result.every(Boolean)),\n  },\n\n  strict: {\n    simple: (fn, rule) => value => {\n      if (isSchemaRule(rule) && value && typeof value === 'object') {\n        return (\n          Object.keys(rule.args[0]).length === Object.keys(value).length &&\n          fn(value)\n        );\n      }\n      return fn(value);\n    },\n    async: (fn, rule) => value =>\n      Promise.resolve(fn(value))\n        .then(result => {\n          if (isSchemaRule(rule) && value && typeof value === 'object') {\n            return (\n              Object.keys(rule.args[0]).length === Object.keys(value).length &&\n              result\n            );\n          }\n          return result;\n        })\n        .catch(() => false),\n  },\n};\n\nfunction isSchemaRule(rule) {\n  return (\n    rule &&\n    rule.name === 'schema' &&\n    rule.args.length > 0 &&\n    typeof rule.args[0] === 'object'\n  );\n}\n\nfunction split(value) {\n  if (typeof value === 'string') {\n    return value.split('');\n  }\n  return value;\n}\n\nconst availableRules = {\n  // Value\n\n  equal: expected => value => value == expected,\n\n  exact: expected => value => value === expected,\n\n  // Types\n\n  number: (allowInfinite = true) => value =>\n    typeof value === 'number' && (allowInfinite || isFinite(value)),\n\n  integer: () => value => {\n    const isInteger = Number.isInteger || isIntegerPolyfill;\n    return isInteger(value);\n  },\n\n  numeric: () => value => !isNaN(parseFloat(value)) && isFinite(value),\n\n  string: () => testType('string'),\n\n  boolean: () => testType('boolean'),\n\n  undefined: () => testType('undefined'),\n\n  null: () => testType('null'),\n\n  array: () => testType('array'),\n\n  object: () => testType('object'),\n\n  instanceOf: instance => value => value instanceof instance,\n\n  // Pattern\n\n  pattern: expected => value => expected.test(value),\n\n  lowercase: () => value => /^([a-z]+\\s*)+$/.test(value),\n\n  uppercase: () => value => /^([A-Z]+\\s*)+$/.test(value),\n\n  vowel: () => value => /^[aeiou]+$/i.test(value),\n\n  consonant: () => value => /^(?=[^aeiou])([a-z]+)$/i.test(value),\n\n  // Value at\n\n  first: expected => value => value[0] == expected,\n\n  last: expected => value => value[value.length - 1] == expected,\n\n  // Length\n\n  empty: () => value => value.length === 0,\n\n  length: (min, max) => value =>\n    value.length >= min && value.length <= (max || min),\n\n  minLength: min => value => value.length >= min,\n\n  maxLength: max => value => value.length <= max,\n\n  // Range\n\n  negative: () => value => value < 0,\n\n  positive: () => value => value >= 0,\n\n  between: (a, b) => value => value >= a && value <= b,\n\n  range: (a, b) => value => value >= a && value <= b,\n\n  lessThan: n => value => value < n,\n\n  lessThanOrEqual: n => value => value <= n,\n\n  greaterThan: n => value => value > n,\n\n  greaterThanOrEqual: n => value => value >= n,\n\n  // Divisible\n\n  even: () => value => value % 2 === 0,\n\n  odd: () => value => value % 2 !== 0,\n\n  includes: expected => value => ~value.indexOf(expected),\n\n  schema: schema => testSchema(schema),\n\n  // branching\n\n  passesAnyOf: (...validations) => value =>\n    validations.some(validation => validation.test(value)),\n\n  optional,\n};\n\nfunction testType(expected) {\n  return value => {\n    return (\n      (Array.isArray(value) && expected === 'array') ||\n      (value === null && expected === 'null') ||\n      typeof value === expected\n    );\n  };\n}\n\nfunction isIntegerPolyfill(value) {\n  return (\n    typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n  );\n}\n\nfunction testSchema(schema) {\n  return {\n    simple: value => {\n      const causes = [];\n      Object.keys(schema).forEach(key => {\n        const nestedValidation = schema[key];\n        try {\n          nestedValidation.check((value || {})[key]);\n        } catch (ex) {\n          ex.target = key;\n          causes.push(ex);\n        }\n      });\n      if (causes.length > 0) {\n        throw causes;\n      }\n      return true;\n    },\n    async: value => {\n      const causes = [];\n      const nested = Object.keys(schema).map(key => {\n        const nestedValidation = schema[key];\n        return nestedValidation.testAsync((value || {})[key]).catch(ex => {\n          ex.target = key;\n          causes.push(ex);\n        });\n      });\n      return Promise.all(nested).then(() => {\n        if (causes.length > 0) {\n          throw causes;\n        }\n\n        return true;\n      });\n    },\n  };\n}\n\nexport default v8n;\n"],"names":["Rule","[object Object]","name","fn","args","modifiers","this","value","testAux","slice","ex","it","Promise","resolve","reject","testAsyncAux","then","valid","catch","pickFn","variant","rule","length","modifier","shift","nextFn","perform","performAsync","Modifier","ValidationError","Error","cause","target","remaining","super","captureStackTrace","Context","chain","nextRuleModifiers","ruleFn","push","apply","simple","async","every","_test","err","forEach","_check","executeAsyncRules","rules","_testAsync","consideredEmpty","considerTrimmedEmptyString","trim","v8n","undefined","Proxy","proxyContext","proxylessContext","customRules","context","obj","prop","newContext","_clone","availableModifiers","_applyModifier","_applyRule","availableRules","addRuleSet","ruleSet","targetContext","Object","keys","contextWithAvailableRules","contextWithAllRules","defineProperty","get","extend","newRules","assign","clearCustomRules","not","result","some","split","item","all","map","Boolean","strict","isSchemaRule","equal","expected","exact","number","allowInfinite","isFinite","integer","Number","isInteger","isIntegerPolyfill","numeric","isNaN","parseFloat","string","testType","boolean","null","array","object","instanceOf","instance","pattern","test","lowercase","uppercase","vowel","consonant","first","last","empty","min","max","minLength","maxLength","negative","positive","between","a","b","range","lessThan","n","lessThanOrEqual","greaterThan","greaterThanOrEqual","even","odd","includes","indexOf","schema","causes","key","nestedValidation","check","nested","testAsync","testSchema","passesAnyOf","validations","validation","optional","Array","isArray","Math","floor"],"mappings":"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"}